name: runner-demo-create-delete
on: 
  workflow_dispatch:
    inputs:
      runner_suffix:
        description: 'Suffix for runner name (e.g., test, demo)'
        required: false
        default: 'demo'
        type: string

jobs:
  create-runner:
    name: Create EC2 Runner
    runs-on: ubuntu-latest
    outputs:
      instance-id: ${{ steps.create.outputs.instance-id }}
      runner-name: ${{ steps.create.outputs.runner-name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
          
      - name: Create EC2 instance
        id: create
        run: |
          # Create EC2 instance for this demo
          export PATH=$PATH:. && ./scripts/create-repository-runner.sh \
            --username ${{ github.repository_owner }} \
            --repository ${{ github.event.repository.name }}-${{ inputs.runner_suffix }} \
            --key-pair ${{ vars.KEY_PAIR_NAME }} \
            --region ${{ vars.AWS_REGION }} \
            --instance-type t3.micro
          
          # Extract instance ID from output (this would need to be captured from script output)
          echo "instance-id=PLACEHOLDER" >> $GITHUB_OUTPUT
          echo "runner-name=runner-${{ github.repository_owner }}-${{ github.event.repository.name }}-${{ inputs.runner_suffix }}" >> $GITHUB_OUTPUT
          
  configure-runner:
    name: Register Runner with GitHub
    runs-on: ubuntu-latest
    needs: create-runner
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Configure runner
        run: |
          # Configure the runner for this repository
          export PATH=$PATH:. && ./scripts/configure-repository-runner.sh \
            --username ${{ github.repository_owner }} \
            --repository ${{ github.event.repository.name }} \
            --instance-id ${{ needs.create-runner.outputs.instance-id }} \
            --region ${{ vars.AWS_REGION }} \
            --key-pair ${{ vars.KEY_PAIR_NAME }} \
            --pat ${{ secrets.GH_PAT }}
            
  test-runner:
    name: Test Self-Hosted Runner
    runs-on: [self-hosted, gha_aws_runner]
    needs: [create-runner, configure-runner]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Test runner capabilities
        run: |
          echo "ðŸŽ‰ Running on dedicated AWS runner!"
          echo "Repository: ${{ github.repository }}"
          echo "Runner: ${{ needs.create-runner.outputs.runner-name }}"
          echo "Instance: ${{ needs.create-runner.outputs.instance-id }}"
          echo ""
          echo "=== System Information ==="
          echo "Hostname: $(hostname)"
          echo "OS: $(cat /etc/os-release | grep PRETTY_NAME | cut -d'=' -f2 | tr -d '\"')"
          echo "Architecture: $(uname -m)"
          echo "CPU: $(nproc) cores"
          echo "Memory: $(free -h | grep Mem | awk '{print $2}')"
          echo ""
          echo "=== Installed Tools ==="
          echo "Docker: $(docker --version)"
          echo "AWS CLI: $(aws --version)"
          echo "Python: $(python3 --version)"
          echo "Node.js: $(node --version)"
          echo "Java: $(java -version 2>&1 | head -1)"
          echo "Terraform: $(terraform --version | head -1)"
          echo "kubectl: $(kubectl version --client --short 2>/dev/null || echo 'kubectl available')"
          echo "Helm: $(helm version --short 2>/dev/null || echo 'Helm available')"
          echo ""
          echo "âœ… All tools working correctly!"
          
      - name: Test Docker functionality
        run: |
          echo "=== Testing Docker ==="
          docker run --rm hello-world
          echo "âœ… Docker working correctly!"
          
      - name: Test AWS CLI functionality
        run: |
          echo "=== Testing AWS CLI ==="
          aws sts get-caller-identity
          echo "âœ… AWS CLI working correctly!"
          
  cleanup-runner:
    name: Cleanup - Deregister & Delete
    runs-on: ubuntu-latest
    needs: [create-runner, configure-runner, test-runner]
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
          
      - name: Destroy runner and resources
        run: |
          # Clean up all resources
          export PATH=$PATH:. && ./scripts/destroy-repository-runner.sh \
            --username ${{ github.repository_owner }} \
            --repository ${{ github.event.repository.name }}-${{ inputs.runner_suffix }} \
            --region ${{ vars.AWS_REGION }} \
            --pat ${{ secrets.GH_PAT }} \
            --force
          
          echo "ðŸ§¹ Cleanup completed!"
          echo "âœ… Runner deregistered from GitHub"
          echo "âœ… EC2 instance terminated"
          echo "âœ… Associated resources cleaned up"