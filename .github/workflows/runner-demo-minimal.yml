name: Minimal Self-Hosted Runner Demo
on: 
  workflow_dispatch:
    inputs:
      provision_instance:
        description: 'Create new EC2 instance if needed'
        required: false
        default: false
        type: boolean

jobs:
  provision-runner:
    name: Provision dedicated EC2 runner instance
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.provision_instance == 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
          
      - name: Provision EC2 instance for repository
        run: |
          # Auto-derived values from GitHub context:
          # - Username: ${{ github.repository_owner }}
          # - Repository: ${{ github.event.repository.name }}
          # - Instance name: runner-${{ github.repository_owner }}-${{ github.event.repository.name }}
          
          ./scripts/create-repository-runner.sh \
            --username ${{ github.repository_owner }} \
            --repository ${{ github.event.repository.name }} \
            --key-pair ${{ vars.KEY_PAIR_NAME }} \
            --region ${{ vars.AWS_REGION }}
            
  start-runner:
    runs-on: ubuntu-latest
    needs: [provision-runner]
    if: always() && !failure()
    outputs:
      runner-name: ${{ steps.start.outputs.runner-name }}
    steps:
      - name: Start dedicated repository runner
        id: start
        run: |
          # Auto-constructed runner name
          RUNNER_NAME="runner-${{ github.repository_owner }}-${{ github.event.repository.name }}"
          echo "runner-name=$RUNNER_NAME" >> $GITHUB_OUTPUT
          echo "Starting runner: $RUNNER_NAME"
          
  your-job:
    needs: start-runner  
    runs-on: [self-hosted, gha_aws_runner]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Show runner info
        run: |
          echo "Running on dedicated AWS runner for ${{ github.repository }}"
          echo "Instance: runner-${{ github.repository_owner }}-${{ github.event.repository.name }}"
          echo "Runner name: ${{ needs.start-runner.outputs.runner-name }}"
          echo "Hostname: $(hostname)"
          docker --version
          aws --version
          
      - name: Your workflow steps here
        run: |
          echo "Add your build/test/deploy steps here"
          
  stop-runner:
    needs: [start-runner, your-job]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Stop dedicated repository runner
        run: |
          echo "Stopping runner: ${{ needs.start-runner.outputs.runner-name }}"
          # Add stop logic here if needed